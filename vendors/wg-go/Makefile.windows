# SPDX-License-Identifier: MIT
# Converted for nmake (Windows)

# Default target
all: clean build install

BUILDMODE=c-shared
BUILDEXT=dll

# Build output
PREFIXDIR=src
BUILDDIR=build
DESTDIR=bin\$(HOST_GOOS)-$(HOST_GOARCH)

# Targets
build: $(BUILDDIR)\wg-go.$(BUILDEXT)

version-header: $(DESTDIR)\wireguard-go-version.h

$(BUILDDIR)\wg-go.$(BUILDEXT): go.mod
	@set CGO_ENABLED=1
	@rem FIXME: #199, hardcoded to aarch64
	@set CGO_CFLAGS=--target=aarch64-windows-gnu
	@set CGO_CXXFLAGS=--target=aarch64-windows-gnu
	go build -C $(PREFIXDIR) -x -ldflags=-w -trimpath -v -o "$(BUILDDIR)\wg-go.$(BUILDEXT)" -buildmode=$(BUILDMODE)
	@if exist "$(BUILDDIR)\libwg-go.h" del "$(BUILDDIR)\libwg-go.h"

$(DESTDIR)\wireguard-go-version.h: go.mod
	# Windows PowerShell equivalent for sed:
	powershell -Command "(Get-Content $<) -replace '.*golang\.zx2c4\.com/wireguard +v[0-9.]+-[0-9]+-([0-9a-f]{8})[0-9a-f]{4}.*', '#define WIREGUARD_GO_VERSION \"$1\"' | Set-Content $@"

clean:
	if exist "$(BUILDDIR)" rmdir /s /q "$(BUILDDIR)"
	if exist "$(DESTDIR)" rmdir /s /q "$(DESTDIR)"

install: build
	if not exist "$(DESTDIR)\lib" mkdir "$(DESTDIR)\lib"
	copy "$(PREFIXDIR)\$(BUILDDIR)\wg-go.$(BUILDEXT)" "$(DESTDIR)\lib"
	xcopy "include" "$(DESTDIR)/include" /S /E /I /Y
